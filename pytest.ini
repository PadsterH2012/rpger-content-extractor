[tool:pytest]
# Pytest configuration for Extractor project

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Output options
addopts =
    --verbose
    --tb=short
    --strict-markers
    --strict-config
    --cov=Modules
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-fail-under=80

# Markers for test categorization
markers =
    unit: Unit tests for individual components
    integration: Integration tests for component interactions
    e2e: End-to-end tests for complete workflows
    slow: Tests that take longer to run
    ai: Tests that require AI provider access
    mongodb: Tests that require MongoDB connection
    pdf: Tests that work with PDF files
    mock: Tests using mock data only
    web: Tests for Flask web application
    text_enhancement: Tests for text quality enhancement
    workflow: Tests for complete user workflows
    priority1: Priority 1 (Critical Core Functionality) tests
    priority2: Priority 2 (Essential Integration & Workflow) tests

# Test filtering
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:pymongo.*

# Minimum version requirements
minversion = 7.0

# Test timeout (in seconds)
timeout = 300

# Parallel execution
# addopts = -n auto  # Uncomment to enable parallel testing
